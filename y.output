Terminals unused in grammar

    MULT_ASSIGN
    DIV_ASSIGN
    VOID
    V_INT
    V_FLOAT
    V_BOOL
    V_CHAR
    V_VOID
    V_ARR
    COMM
    RANGE
    PRINT
    ELSE
    GT
    LT
    TRUE
    FALSE


State 2 conflicts: 1 shift/reduce
State 120 conflicts: 1 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | import program
    3        | content

    4 import: LEARN ARROW V_STR

    5 content: statement
    6        | content statement
    7        | controlStructure
    8        | content controlStructure
    9        | method
   10        | content method

   11 statement: initialization
   12          | initialization '=' expression
   13          | NAME '=' expression
   14          | initialization INC expression
   15          | NAME INC expression
   16          | initialization DEC expression
   17          | NAME DEC expression
   18          | RET
   19          | RET expression
   20          | END
   21          | NEXT
   22          | TERM

   23 initialization: typeContainer nameContainer

   24 nameContainer: NAME
   25              | NAME ',' nameContainer

   26 param: typeContainer NAME
   27      | typeContainer NAME ',' param

   28 expression: operand
   29           | operand '+' expression
   30           | operand '-' expression
   31           | operand '*' expression
   32           | operand '/' expression
   33           | operand '%' expression
   34           | operand '^' expression
   35           | '{' list '}'

   36 list: DIGIT
   37     | DIGIT ',' list

   38 operand: DIGIT
   39        | NAME
   40        | NAME '[' DIGIT ']'
   41        | NAME '[' NAME ']'
   42        | NAME '(' nameContainer ')'

   43 controlStructure: IF '(' comparation ')' '{' content '}'
   44                 | LOOP '(' DIGIT ')' '{' content '}'
   45                 | LOOP FOR '(' INT NAME ',' NAME comparator len ',' DIGIT ')' '{' content '}'
   46                 | LOOP WHILE '(' comparation ')' '{' content '}'
   47                 | LOOP UNTIL '(' comparation ')' '{' content '}'

   48 len: LEN '(' NAME ')'

   49 method: METH NAME '(' param ')' ':' typeContainer '{' content '}'

   50 typeContainer: type
   51              | type '[' ']'
   52              | type '[' DIGIT ']'
   53              | type '[' NAME ']'

   54 type: INT
   55     | FLOAT
   56     | BOOL
   57     | CHAR
   58     | STR
   59     | ARR

   60 comparator: EQ
   61           | NEQ
   62           | '>'
   63           | '<'
   64           | GTE
   65           | LTE
   66           | AND
   67           | OR

   68 comparation: NAME
   69            | NAME comparator comparation
   70            | NOT NAME comparator comparation
   71            | NOT '(' comparation ')'
   72            | NOT '(' expression ')'


Terminals, with rules where they appear

    $end (0) 0
    '%' (37) 33
    '(' (40) 42 43 44 45 46 47 48 49 71 72
    ')' (41) 42 43 44 45 46 47 48 49 71 72
    '*' (42) 31
    '+' (43) 29
    ',' (44) 25 27 37 45
    '-' (45) 30
    '/' (47) 32
    ':' (58) 49
    '<' (60) 63
    '=' (61) 12 13
    '>' (62) 62
    '[' (91) 40 41 51 52 53
    ']' (93) 40 41 51 52 53
    '^' (94) 34
    '{' (123) 35 43 44 45 46 47 49
    '}' (125) 35 43 44 45 46 47 49
    error (256)
    DIGIT (258) 36 37 38 40 44 45 52
    INC (259) 14 15
    DEC (260) 16 17
    MULT_ASSIGN (261)
    DIV_ASSIGN (262)
    LEARN (263) 4
    ARROW (264) 4
    RET (265) 18 19
    END (266) 20
    NEXT (267) 21
    TERM (268) 22
    INT (269) 45 54
    FLOAT (270) 55
    BOOL (271) 56
    CHAR (272) 57
    VOID (273)
    ARR (274) 59
    STR (275) 58
    V_INT (276)
    V_FLOAT (277)
    V_BOOL (278)
    V_CHAR (279)
    V_VOID (280)
    V_ARR (281)
    V_STR (282) 4
    NAME (283) 13 15 17 24 25 26 27 39 40 41 42 45 48 49 53 68 69 70
    COMM (284)
    RANGE (285)
    LEN (286) 48
    PRINT (287)
    METH (288) 49
    IF (289) 43
    AND (290) 66
    OR (291) 67
    NOT (292) 70 71 72
    ELSE (293)
    LOOP (294) 44 45 46 47
    FOR (295) 45
    WHILE (296) 46
    UNTIL (297) 47
    EQ (298) 60
    NEQ (299) 61
    GT (300)
    LT (301)
    GTE (302) 64
    LTE (303) 65
    TRUE (304)
    FALSE (305)


Nonterminals, with rules where they appear

    $accept (68)
        on left: 0
    program (69)
        on left: 1 2 3
        on right: 0 2
    import (70)
        on left: 4
        on right: 2
    content (71)
        on left: 5 6 7 8 9 10
        on right: 3 6 8 10 43 44 45 46 47 49
    statement (72)
        on left: 11 12 13 14 15 16 17 18 19 20 21 22
        on right: 5 6
    initialization (73)
        on left: 23
        on right: 11 12 14 16
    nameContainer (74)
        on left: 24 25
        on right: 23 25 42
    param (75)
        on left: 26 27
        on right: 27 49
    expression (76)
        on left: 28 29 30 31 32 33 34 35
        on right: 12 13 14 15 16 17 19 29 30 31 32 33 34 72
    list (77)
        on left: 36 37
        on right: 35 37
    operand (78)
        on left: 38 39 40 41 42
        on right: 28 29 30 31 32 33 34
    controlStructure (79)
        on left: 43 44 45 46 47
        on right: 7 8
    len (80)
        on left: 48
        on right: 45
    method (81)
        on left: 49
        on right: 9 10
    typeContainer (82)
        on left: 50 51 52 53
        on right: 23 26 27 49
    type (83)
        on left: 54 55 56 57 58 59
        on right: 50 51 52 53
    comparator (84)
        on left: 60 61 62 63 64 65 66 67
        on right: 45 69 70
    comparation (85)
        on left: 68 69 70 71 72
        on right: 43 46 47 69 70 71


State 0

    0 $accept: . program $end

    LEARN  shift, and go to state 1
    RET    shift, and go to state 2
    END    shift, and go to state 3
    NEXT   shift, and go to state 4
    TERM   shift, and go to state 5
    INT    shift, and go to state 6
    FLOAT  shift, and go to state 7
    BOOL   shift, and go to state 8
    CHAR   shift, and go to state 9
    ARR    shift, and go to state 10
    STR    shift, and go to state 11
    NAME   shift, and go to state 12
    METH   shift, and go to state 13
    IF     shift, and go to state 14
    LOOP   shift, and go to state 15

    $default  reduce using rule 1 (program)

    program           go to state 16
    import            go to state 17
    content           go to state 18
    statement         go to state 19
    initialization    go to state 20
    controlStructure  go to state 21
    method            go to state 22
    typeContainer     go to state 23
    type              go to state 24


State 1

    4 import: LEARN . ARROW V_STR

    ARROW  shift, and go to state 25


State 2

   18 statement: RET .
   19          | RET . expression

    DIGIT  shift, and go to state 26
    NAME   shift, and go to state 27
    '{'    shift, and go to state 28

    NAME      [reduce using rule 18 (statement)]
    $default  reduce using rule 18 (statement)

    expression  go to state 29
    operand     go to state 30


State 3

   20 statement: END .

    $default  reduce using rule 20 (statement)


State 4

   21 statement: NEXT .

    $default  reduce using rule 21 (statement)


State 5

   22 statement: TERM .

    $default  reduce using rule 22 (statement)


State 6

   54 type: INT .

    $default  reduce using rule 54 (type)


State 7

   55 type: FLOAT .

    $default  reduce using rule 55 (type)


State 8

   56 type: BOOL .

    $default  reduce using rule 56 (type)


State 9

   57 type: CHAR .

    $default  reduce using rule 57 (type)


State 10

   59 type: ARR .

    $default  reduce using rule 59 (type)


State 11

   58 type: STR .

    $default  reduce using rule 58 (type)


State 12

   13 statement: NAME . '=' expression
   15          | NAME . INC expression
   17          | NAME . DEC expression

    INC  shift, and go to state 31
    DEC  shift, and go to state 32
    '='  shift, and go to state 33


State 13

   49 method: METH . NAME '(' param ')' ':' typeContainer '{' content '}'

    NAME  shift, and go to state 34


State 14

   43 controlStructure: IF . '(' comparation ')' '{' content '}'

    '('  shift, and go to state 35


State 15

   44 controlStructure: LOOP . '(' DIGIT ')' '{' content '}'
   45                 | LOOP . FOR '(' INT NAME ',' NAME comparator len ',' DIGIT ')' '{' content '}'
   46                 | LOOP . WHILE '(' comparation ')' '{' content '}'
   47                 | LOOP . UNTIL '(' comparation ')' '{' content '}'

    FOR    shift, and go to state 36
    WHILE  shift, and go to state 37
    UNTIL  shift, and go to state 38
    '('    shift, and go to state 39


State 16

    0 $accept: program . $end

    $end  shift, and go to state 40


State 17

    2 program: import . program

    LEARN  shift, and go to state 1
    RET    shift, and go to state 2
    END    shift, and go to state 3
    NEXT   shift, and go to state 4
    TERM   shift, and go to state 5
    INT    shift, and go to state 6
    FLOAT  shift, and go to state 7
    BOOL   shift, and go to state 8
    CHAR   shift, and go to state 9
    ARR    shift, and go to state 10
    STR    shift, and go to state 11
    NAME   shift, and go to state 12
    METH   shift, and go to state 13
    IF     shift, and go to state 14
    LOOP   shift, and go to state 15

    $default  reduce using rule 1 (program)

    program           go to state 41
    import            go to state 17
    content           go to state 18
    statement         go to state 19
    initialization    go to state 20
    controlStructure  go to state 21
    method            go to state 22
    typeContainer     go to state 23
    type              go to state 24


State 18

    3 program: content .
    6 content: content . statement
    8        | content . controlStructure
   10        | content . method

    RET    shift, and go to state 2
    END    shift, and go to state 3
    NEXT   shift, and go to state 4
    TERM   shift, and go to state 5
    INT    shift, and go to state 6
    FLOAT  shift, and go to state 7
    BOOL   shift, and go to state 8
    CHAR   shift, and go to state 9
    ARR    shift, and go to state 10
    STR    shift, and go to state 11
    NAME   shift, and go to state 12
    METH   shift, and go to state 13
    IF     shift, and go to state 14
    LOOP   shift, and go to state 15

    $default  reduce using rule 3 (program)

    statement         go to state 42
    initialization    go to state 20
    controlStructure  go to state 43
    method            go to state 44
    typeContainer     go to state 23
    type              go to state 24


State 19

    5 content: statement .

    $default  reduce using rule 5 (content)


State 20

   11 statement: initialization .
   12          | initialization . '=' expression
   14          | initialization . INC expression
   16          | initialization . DEC expression

    INC  shift, and go to state 45
    DEC  shift, and go to state 46
    '='  shift, and go to state 47

    $default  reduce using rule 11 (statement)


State 21

    7 content: controlStructure .

    $default  reduce using rule 7 (content)


State 22

    9 content: method .

    $default  reduce using rule 9 (content)


State 23

   23 initialization: typeContainer . nameContainer

    NAME  shift, and go to state 48

    nameContainer  go to state 49


State 24

   50 typeContainer: type .
   51              | type . '[' ']'
   52              | type . '[' DIGIT ']'
   53              | type . '[' NAME ']'

    '['  shift, and go to state 50

    $default  reduce using rule 50 (typeContainer)


State 25

    4 import: LEARN ARROW . V_STR

    V_STR  shift, and go to state 51


State 26

   38 operand: DIGIT .

    $default  reduce using rule 38 (operand)


State 27

   39 operand: NAME .
   40        | NAME . '[' DIGIT ']'
   41        | NAME . '[' NAME ']'
   42        | NAME . '(' nameContainer ')'

    '['  shift, and go to state 52
    '('  shift, and go to state 53

    $default  reduce using rule 39 (operand)


State 28

   35 expression: '{' . list '}'

    DIGIT  shift, and go to state 54

    list  go to state 55


State 29

   19 statement: RET expression .

    $default  reduce using rule 19 (statement)


State 30

   28 expression: operand .
   29           | operand . '+' expression
   30           | operand . '-' expression
   31           | operand . '*' expression
   32           | operand . '/' expression
   33           | operand . '%' expression
   34           | operand . '^' expression

    '+'  shift, and go to state 56
    '-'  shift, and go to state 57
    '*'  shift, and go to state 58
    '/'  shift, and go to state 59
    '%'  shift, and go to state 60
    '^'  shift, and go to state 61

    $default  reduce using rule 28 (expression)


State 31

   15 statement: NAME INC . expression

    DIGIT  shift, and go to state 26
    NAME   shift, and go to state 27
    '{'    shift, and go to state 28

    expression  go to state 62
    operand     go to state 30


State 32

   17 statement: NAME DEC . expression

    DIGIT  shift, and go to state 26
    NAME   shift, and go to state 27
    '{'    shift, and go to state 28

    expression  go to state 63
    operand     go to state 30


State 33

   13 statement: NAME '=' . expression

    DIGIT  shift, and go to state 26
    NAME   shift, and go to state 27
    '{'    shift, and go to state 28

    expression  go to state 64
    operand     go to state 30


State 34

   49 method: METH NAME . '(' param ')' ':' typeContainer '{' content '}'

    '('  shift, and go to state 65


State 35

   43 controlStructure: IF '(' . comparation ')' '{' content '}'

    NAME  shift, and go to state 66
    NOT   shift, and go to state 67

    comparation  go to state 68


State 36

   45 controlStructure: LOOP FOR . '(' INT NAME ',' NAME comparator len ',' DIGIT ')' '{' content '}'

    '('  shift, and go to state 69


State 37

   46 controlStructure: LOOP WHILE . '(' comparation ')' '{' content '}'

    '('  shift, and go to state 70


State 38

   47 controlStructure: LOOP UNTIL . '(' comparation ')' '{' content '}'

    '('  shift, and go to state 71


State 39

   44 controlStructure: LOOP '(' . DIGIT ')' '{' content '}'

    DIGIT  shift, and go to state 72


State 40

    0 $accept: program $end .

    $default  accept


State 41

    2 program: import program .

    $default  reduce using rule 2 (program)


State 42

    6 content: content statement .

    $default  reduce using rule 6 (content)


State 43

    8 content: content controlStructure .

    $default  reduce using rule 8 (content)


State 44

   10 content: content method .

    $default  reduce using rule 10 (content)


State 45

   14 statement: initialization INC . expression

    DIGIT  shift, and go to state 26
    NAME   shift, and go to state 27
    '{'    shift, and go to state 28

    expression  go to state 73
    operand     go to state 30


State 46

   16 statement: initialization DEC . expression

    DIGIT  shift, and go to state 26
    NAME   shift, and go to state 27
    '{'    shift, and go to state 28

    expression  go to state 74
    operand     go to state 30


State 47

   12 statement: initialization '=' . expression

    DIGIT  shift, and go to state 26
    NAME   shift, and go to state 27
    '{'    shift, and go to state 28

    expression  go to state 75
    operand     go to state 30


State 48

   24 nameContainer: NAME .
   25              | NAME . ',' nameContainer

    ','  shift, and go to state 76

    $default  reduce using rule 24 (nameContainer)


State 49

   23 initialization: typeContainer nameContainer .

    $default  reduce using rule 23 (initialization)


State 50

   51 typeContainer: type '[' . ']'
   52              | type '[' . DIGIT ']'
   53              | type '[' . NAME ']'

    DIGIT  shift, and go to state 77
    NAME   shift, and go to state 78
    ']'    shift, and go to state 79


State 51

    4 import: LEARN ARROW V_STR .

    $default  reduce using rule 4 (import)


State 52

   40 operand: NAME '[' . DIGIT ']'
   41        | NAME '[' . NAME ']'

    DIGIT  shift, and go to state 80
    NAME   shift, and go to state 81


State 53

   42 operand: NAME '(' . nameContainer ')'

    NAME  shift, and go to state 48

    nameContainer  go to state 82


State 54

   36 list: DIGIT .
   37     | DIGIT . ',' list

    ','  shift, and go to state 83

    $default  reduce using rule 36 (list)


State 55

   35 expression: '{' list . '}'

    '}'  shift, and go to state 84


State 56

   29 expression: operand '+' . expression

    DIGIT  shift, and go to state 26
    NAME   shift, and go to state 27
    '{'    shift, and go to state 28

    expression  go to state 85
    operand     go to state 30


State 57

   30 expression: operand '-' . expression

    DIGIT  shift, and go to state 26
    NAME   shift, and go to state 27
    '{'    shift, and go to state 28

    expression  go to state 86
    operand     go to state 30


State 58

   31 expression: operand '*' . expression

    DIGIT  shift, and go to state 26
    NAME   shift, and go to state 27
    '{'    shift, and go to state 28

    expression  go to state 87
    operand     go to state 30


State 59

   32 expression: operand '/' . expression

    DIGIT  shift, and go to state 26
    NAME   shift, and go to state 27
    '{'    shift, and go to state 28

    expression  go to state 88
    operand     go to state 30


State 60

   33 expression: operand '%' . expression

    DIGIT  shift, and go to state 26
    NAME   shift, and go to state 27
    '{'    shift, and go to state 28

    expression  go to state 89
    operand     go to state 30


State 61

   34 expression: operand '^' . expression

    DIGIT  shift, and go to state 26
    NAME   shift, and go to state 27
    '{'    shift, and go to state 28

    expression  go to state 90
    operand     go to state 30


State 62

   15 statement: NAME INC expression .

    $default  reduce using rule 15 (statement)


State 63

   17 statement: NAME DEC expression .

    $default  reduce using rule 17 (statement)


State 64

   13 statement: NAME '=' expression .

    $default  reduce using rule 13 (statement)


State 65

   49 method: METH NAME '(' . param ')' ':' typeContainer '{' content '}'

    INT    shift, and go to state 6
    FLOAT  shift, and go to state 7
    BOOL   shift, and go to state 8
    CHAR   shift, and go to state 9
    ARR    shift, and go to state 10
    STR    shift, and go to state 11

    param          go to state 91
    typeContainer  go to state 92
    type           go to state 24


State 66

   68 comparation: NAME .
   69            | NAME . comparator comparation

    AND  shift, and go to state 93
    OR   shift, and go to state 94
    EQ   shift, and go to state 95
    NEQ  shift, and go to state 96
    GTE  shift, and go to state 97
    LTE  shift, and go to state 98
    '>'  shift, and go to state 99
    '<'  shift, and go to state 100

    $default  reduce using rule 68 (comparation)

    comparator  go to state 101


State 67

   70 comparation: NOT . NAME comparator comparation
   71            | NOT . '(' comparation ')'
   72            | NOT . '(' expression ')'

    NAME  shift, and go to state 102
    '('   shift, and go to state 103


State 68

   43 controlStructure: IF '(' comparation . ')' '{' content '}'

    ')'  shift, and go to state 104


State 69

   45 controlStructure: LOOP FOR '(' . INT NAME ',' NAME comparator len ',' DIGIT ')' '{' content '}'

    INT  shift, and go to state 105


State 70

   46 controlStructure: LOOP WHILE '(' . comparation ')' '{' content '}'

    NAME  shift, and go to state 66
    NOT   shift, and go to state 67

    comparation  go to state 106


State 71

   47 controlStructure: LOOP UNTIL '(' . comparation ')' '{' content '}'

    NAME  shift, and go to state 66
    NOT   shift, and go to state 67

    comparation  go to state 107


State 72

   44 controlStructure: LOOP '(' DIGIT . ')' '{' content '}'

    ')'  shift, and go to state 108


State 73

   14 statement: initialization INC expression .

    $default  reduce using rule 14 (statement)


State 74

   16 statement: initialization DEC expression .

    $default  reduce using rule 16 (statement)


State 75

   12 statement: initialization '=' expression .

    $default  reduce using rule 12 (statement)


State 76

   25 nameContainer: NAME ',' . nameContainer

    NAME  shift, and go to state 48

    nameContainer  go to state 109


State 77

   52 typeContainer: type '[' DIGIT . ']'

    ']'  shift, and go to state 110


State 78

   53 typeContainer: type '[' NAME . ']'

    ']'  shift, and go to state 111


State 79

   51 typeContainer: type '[' ']' .

    $default  reduce using rule 51 (typeContainer)


State 80

   40 operand: NAME '[' DIGIT . ']'

    ']'  shift, and go to state 112


State 81

   41 operand: NAME '[' NAME . ']'

    ']'  shift, and go to state 113


State 82

   42 operand: NAME '(' nameContainer . ')'

    ')'  shift, and go to state 114


State 83

   37 list: DIGIT ',' . list

    DIGIT  shift, and go to state 54

    list  go to state 115


State 84

   35 expression: '{' list '}' .

    $default  reduce using rule 35 (expression)


State 85

   29 expression: operand '+' expression .

    $default  reduce using rule 29 (expression)


State 86

   30 expression: operand '-' expression .

    $default  reduce using rule 30 (expression)


State 87

   31 expression: operand '*' expression .

    $default  reduce using rule 31 (expression)


State 88

   32 expression: operand '/' expression .

    $default  reduce using rule 32 (expression)


State 89

   33 expression: operand '%' expression .

    $default  reduce using rule 33 (expression)


State 90

   34 expression: operand '^' expression .

    $default  reduce using rule 34 (expression)


State 91

   49 method: METH NAME '(' param . ')' ':' typeContainer '{' content '}'

    ')'  shift, and go to state 116


State 92

   26 param: typeContainer . NAME
   27      | typeContainer . NAME ',' param

    NAME  shift, and go to state 117


State 93

   66 comparator: AND .

    $default  reduce using rule 66 (comparator)


State 94

   67 comparator: OR .

    $default  reduce using rule 67 (comparator)


State 95

   60 comparator: EQ .

    $default  reduce using rule 60 (comparator)


State 96

   61 comparator: NEQ .

    $default  reduce using rule 61 (comparator)


State 97

   64 comparator: GTE .

    $default  reduce using rule 64 (comparator)


State 98

   65 comparator: LTE .

    $default  reduce using rule 65 (comparator)


State 99

   62 comparator: '>' .

    $default  reduce using rule 62 (comparator)


State 100

   63 comparator: '<' .

    $default  reduce using rule 63 (comparator)


State 101

   69 comparation: NAME comparator . comparation

    NAME  shift, and go to state 66
    NOT   shift, and go to state 67

    comparation  go to state 118


State 102

   70 comparation: NOT NAME . comparator comparation

    AND  shift, and go to state 93
    OR   shift, and go to state 94
    EQ   shift, and go to state 95
    NEQ  shift, and go to state 96
    GTE  shift, and go to state 97
    LTE  shift, and go to state 98
    '>'  shift, and go to state 99
    '<'  shift, and go to state 100

    comparator  go to state 119


State 103

   71 comparation: NOT '(' . comparation ')'
   72            | NOT '(' . expression ')'

    DIGIT  shift, and go to state 26
    NAME   shift, and go to state 120
    NOT    shift, and go to state 67
    '{'    shift, and go to state 28

    expression   go to state 121
    operand      go to state 30
    comparation  go to state 122


State 104

   43 controlStructure: IF '(' comparation ')' . '{' content '}'

    '{'  shift, and go to state 123


State 105

   45 controlStructure: LOOP FOR '(' INT . NAME ',' NAME comparator len ',' DIGIT ')' '{' content '}'

    NAME  shift, and go to state 124


State 106

   46 controlStructure: LOOP WHILE '(' comparation . ')' '{' content '}'

    ')'  shift, and go to state 125


State 107

   47 controlStructure: LOOP UNTIL '(' comparation . ')' '{' content '}'

    ')'  shift, and go to state 126


State 108

   44 controlStructure: LOOP '(' DIGIT ')' . '{' content '}'

    '{'  shift, and go to state 127


State 109

   25 nameContainer: NAME ',' nameContainer .

    $default  reduce using rule 25 (nameContainer)


State 110

   52 typeContainer: type '[' DIGIT ']' .

    $default  reduce using rule 52 (typeContainer)


State 111

   53 typeContainer: type '[' NAME ']' .

    $default  reduce using rule 53 (typeContainer)


State 112

   40 operand: NAME '[' DIGIT ']' .

    $default  reduce using rule 40 (operand)


State 113

   41 operand: NAME '[' NAME ']' .

    $default  reduce using rule 41 (operand)


State 114

   42 operand: NAME '(' nameContainer ')' .

    $default  reduce using rule 42 (operand)


State 115

   37 list: DIGIT ',' list .

    $default  reduce using rule 37 (list)


State 116

   49 method: METH NAME '(' param ')' . ':' typeContainer '{' content '}'

    ':'  shift, and go to state 128


State 117

   26 param: typeContainer NAME .
   27      | typeContainer NAME . ',' param

    ','  shift, and go to state 129

    $default  reduce using rule 26 (param)


State 118

   69 comparation: NAME comparator comparation .

    $default  reduce using rule 69 (comparation)


State 119

   70 comparation: NOT NAME comparator . comparation

    NAME  shift, and go to state 66
    NOT   shift, and go to state 67

    comparation  go to state 130


State 120

   39 operand: NAME .
   40        | NAME . '[' DIGIT ']'
   41        | NAME . '[' NAME ']'
   42        | NAME . '(' nameContainer ')'
   68 comparation: NAME .
   69            | NAME . comparator comparation

    AND  shift, and go to state 93
    OR   shift, and go to state 94
    EQ   shift, and go to state 95
    NEQ  shift, and go to state 96
    GTE  shift, and go to state 97
    LTE  shift, and go to state 98
    '['  shift, and go to state 52
    '('  shift, and go to state 53
    '>'  shift, and go to state 99
    '<'  shift, and go to state 100

    ')'       reduce using rule 39 (operand)
    ')'       [reduce using rule 68 (comparation)]
    $default  reduce using rule 39 (operand)

    comparator  go to state 101


State 121

   72 comparation: NOT '(' expression . ')'

    ')'  shift, and go to state 131


State 122

   71 comparation: NOT '(' comparation . ')'

    ')'  shift, and go to state 132


State 123

   43 controlStructure: IF '(' comparation ')' '{' . content '}'

    RET    shift, and go to state 2
    END    shift, and go to state 3
    NEXT   shift, and go to state 4
    TERM   shift, and go to state 5
    INT    shift, and go to state 6
    FLOAT  shift, and go to state 7
    BOOL   shift, and go to state 8
    CHAR   shift, and go to state 9
    ARR    shift, and go to state 10
    STR    shift, and go to state 11
    NAME   shift, and go to state 12
    METH   shift, and go to state 13
    IF     shift, and go to state 14
    LOOP   shift, and go to state 15

    content           go to state 133
    statement         go to state 19
    initialization    go to state 20
    controlStructure  go to state 21
    method            go to state 22
    typeContainer     go to state 23
    type              go to state 24


State 124

   45 controlStructure: LOOP FOR '(' INT NAME . ',' NAME comparator len ',' DIGIT ')' '{' content '}'

    ','  shift, and go to state 134


State 125

   46 controlStructure: LOOP WHILE '(' comparation ')' . '{' content '}'

    '{'  shift, and go to state 135


State 126

   47 controlStructure: LOOP UNTIL '(' comparation ')' . '{' content '}'

    '{'  shift, and go to state 136


State 127

   44 controlStructure: LOOP '(' DIGIT ')' '{' . content '}'

    RET    shift, and go to state 2
    END    shift, and go to state 3
    NEXT   shift, and go to state 4
    TERM   shift, and go to state 5
    INT    shift, and go to state 6
    FLOAT  shift, and go to state 7
    BOOL   shift, and go to state 8
    CHAR   shift, and go to state 9
    ARR    shift, and go to state 10
    STR    shift, and go to state 11
    NAME   shift, and go to state 12
    METH   shift, and go to state 13
    IF     shift, and go to state 14
    LOOP   shift, and go to state 15

    content           go to state 137
    statement         go to state 19
    initialization    go to state 20
    controlStructure  go to state 21
    method            go to state 22
    typeContainer     go to state 23
    type              go to state 24


State 128

   49 method: METH NAME '(' param ')' ':' . typeContainer '{' content '}'

    INT    shift, and go to state 6
    FLOAT  shift, and go to state 7
    BOOL   shift, and go to state 8
    CHAR   shift, and go to state 9
    ARR    shift, and go to state 10
    STR    shift, and go to state 11

    typeContainer  go to state 138
    type           go to state 24


State 129

   27 param: typeContainer NAME ',' . param

    INT    shift, and go to state 6
    FLOAT  shift, and go to state 7
    BOOL   shift, and go to state 8
    CHAR   shift, and go to state 9
    ARR    shift, and go to state 10
    STR    shift, and go to state 11

    param          go to state 139
    typeContainer  go to state 92
    type           go to state 24


State 130

   70 comparation: NOT NAME comparator comparation .

    $default  reduce using rule 70 (comparation)


State 131

   72 comparation: NOT '(' expression ')' .

    $default  reduce using rule 72 (comparation)


State 132

   71 comparation: NOT '(' comparation ')' .

    $default  reduce using rule 71 (comparation)


State 133

    6 content: content . statement
    8        | content . controlStructure
   10        | content . method
   43 controlStructure: IF '(' comparation ')' '{' content . '}'

    RET    shift, and go to state 2
    END    shift, and go to state 3
    NEXT   shift, and go to state 4
    TERM   shift, and go to state 5
    INT    shift, and go to state 6
    FLOAT  shift, and go to state 7
    BOOL   shift, and go to state 8
    CHAR   shift, and go to state 9
    ARR    shift, and go to state 10
    STR    shift, and go to state 11
    NAME   shift, and go to state 12
    METH   shift, and go to state 13
    IF     shift, and go to state 14
    LOOP   shift, and go to state 15
    '}'    shift, and go to state 140

    statement         go to state 42
    initialization    go to state 20
    controlStructure  go to state 43
    method            go to state 44
    typeContainer     go to state 23
    type              go to state 24


State 134

   45 controlStructure: LOOP FOR '(' INT NAME ',' . NAME comparator len ',' DIGIT ')' '{' content '}'

    NAME  shift, and go to state 141


State 135

   46 controlStructure: LOOP WHILE '(' comparation ')' '{' . content '}'

    RET    shift, and go to state 2
    END    shift, and go to state 3
    NEXT   shift, and go to state 4
    TERM   shift, and go to state 5
    INT    shift, and go to state 6
    FLOAT  shift, and go to state 7
    BOOL   shift, and go to state 8
    CHAR   shift, and go to state 9
    ARR    shift, and go to state 10
    STR    shift, and go to state 11
    NAME   shift, and go to state 12
    METH   shift, and go to state 13
    IF     shift, and go to state 14
    LOOP   shift, and go to state 15

    content           go to state 142
    statement         go to state 19
    initialization    go to state 20
    controlStructure  go to state 21
    method            go to state 22
    typeContainer     go to state 23
    type              go to state 24


State 136

   47 controlStructure: LOOP UNTIL '(' comparation ')' '{' . content '}'

    RET    shift, and go to state 2
    END    shift, and go to state 3
    NEXT   shift, and go to state 4
    TERM   shift, and go to state 5
    INT    shift, and go to state 6
    FLOAT  shift, and go to state 7
    BOOL   shift, and go to state 8
    CHAR   shift, and go to state 9
    ARR    shift, and go to state 10
    STR    shift, and go to state 11
    NAME   shift, and go to state 12
    METH   shift, and go to state 13
    IF     shift, and go to state 14
    LOOP   shift, and go to state 15

    content           go to state 143
    statement         go to state 19
    initialization    go to state 20
    controlStructure  go to state 21
    method            go to state 22
    typeContainer     go to state 23
    type              go to state 24


State 137

    6 content: content . statement
    8        | content . controlStructure
   10        | content . method
   44 controlStructure: LOOP '(' DIGIT ')' '{' content . '}'

    RET    shift, and go to state 2
    END    shift, and go to state 3
    NEXT   shift, and go to state 4
    TERM   shift, and go to state 5
    INT    shift, and go to state 6
    FLOAT  shift, and go to state 7
    BOOL   shift, and go to state 8
    CHAR   shift, and go to state 9
    ARR    shift, and go to state 10
    STR    shift, and go to state 11
    NAME   shift, and go to state 12
    METH   shift, and go to state 13
    IF     shift, and go to state 14
    LOOP   shift, and go to state 15
    '}'    shift, and go to state 144

    statement         go to state 42
    initialization    go to state 20
    controlStructure  go to state 43
    method            go to state 44
    typeContainer     go to state 23
    type              go to state 24


State 138

   49 method: METH NAME '(' param ')' ':' typeContainer . '{' content '}'

    '{'  shift, and go to state 145


State 139

   27 param: typeContainer NAME ',' param .

    $default  reduce using rule 27 (param)


State 140

   43 controlStructure: IF '(' comparation ')' '{' content '}' .

    $default  reduce using rule 43 (controlStructure)


State 141

   45 controlStructure: LOOP FOR '(' INT NAME ',' NAME . comparator len ',' DIGIT ')' '{' content '}'

    AND  shift, and go to state 93
    OR   shift, and go to state 94
    EQ   shift, and go to state 95
    NEQ  shift, and go to state 96
    GTE  shift, and go to state 97
    LTE  shift, and go to state 98
    '>'  shift, and go to state 99
    '<'  shift, and go to state 100

    comparator  go to state 146


State 142

    6 content: content . statement
    8        | content . controlStructure
   10        | content . method
   46 controlStructure: LOOP WHILE '(' comparation ')' '{' content . '}'

    RET    shift, and go to state 2
    END    shift, and go to state 3
    NEXT   shift, and go to state 4
    TERM   shift, and go to state 5
    INT    shift, and go to state 6
    FLOAT  shift, and go to state 7
    BOOL   shift, and go to state 8
    CHAR   shift, and go to state 9
    ARR    shift, and go to state 10
    STR    shift, and go to state 11
    NAME   shift, and go to state 12
    METH   shift, and go to state 13
    IF     shift, and go to state 14
    LOOP   shift, and go to state 15
    '}'    shift, and go to state 147

    statement         go to state 42
    initialization    go to state 20
    controlStructure  go to state 43
    method            go to state 44
    typeContainer     go to state 23
    type              go to state 24


State 143

    6 content: content . statement
    8        | content . controlStructure
   10        | content . method
   47 controlStructure: LOOP UNTIL '(' comparation ')' '{' content . '}'

    RET    shift, and go to state 2
    END    shift, and go to state 3
    NEXT   shift, and go to state 4
    TERM   shift, and go to state 5
    INT    shift, and go to state 6
    FLOAT  shift, and go to state 7
    BOOL   shift, and go to state 8
    CHAR   shift, and go to state 9
    ARR    shift, and go to state 10
    STR    shift, and go to state 11
    NAME   shift, and go to state 12
    METH   shift, and go to state 13
    IF     shift, and go to state 14
    LOOP   shift, and go to state 15
    '}'    shift, and go to state 148

    statement         go to state 42
    initialization    go to state 20
    controlStructure  go to state 43
    method            go to state 44
    typeContainer     go to state 23
    type              go to state 24


State 144

   44 controlStructure: LOOP '(' DIGIT ')' '{' content '}' .

    $default  reduce using rule 44 (controlStructure)


State 145

   49 method: METH NAME '(' param ')' ':' typeContainer '{' . content '}'

    RET    shift, and go to state 2
    END    shift, and go to state 3
    NEXT   shift, and go to state 4
    TERM   shift, and go to state 5
    INT    shift, and go to state 6
    FLOAT  shift, and go to state 7
    BOOL   shift, and go to state 8
    CHAR   shift, and go to state 9
    ARR    shift, and go to state 10
    STR    shift, and go to state 11
    NAME   shift, and go to state 12
    METH   shift, and go to state 13
    IF     shift, and go to state 14
    LOOP   shift, and go to state 15

    content           go to state 149
    statement         go to state 19
    initialization    go to state 20
    controlStructure  go to state 21
    method            go to state 22
    typeContainer     go to state 23
    type              go to state 24


State 146

   45 controlStructure: LOOP FOR '(' INT NAME ',' NAME comparator . len ',' DIGIT ')' '{' content '}'

    LEN  shift, and go to state 150

    len  go to state 151


State 147

   46 controlStructure: LOOP WHILE '(' comparation ')' '{' content '}' .

    $default  reduce using rule 46 (controlStructure)


State 148

   47 controlStructure: LOOP UNTIL '(' comparation ')' '{' content '}' .

    $default  reduce using rule 47 (controlStructure)


State 149

    6 content: content . statement
    8        | content . controlStructure
   10        | content . method
   49 method: METH NAME '(' param ')' ':' typeContainer '{' content . '}'

    RET    shift, and go to state 2
    END    shift, and go to state 3
    NEXT   shift, and go to state 4
    TERM   shift, and go to state 5
    INT    shift, and go to state 6
    FLOAT  shift, and go to state 7
    BOOL   shift, and go to state 8
    CHAR   shift, and go to state 9
    ARR    shift, and go to state 10
    STR    shift, and go to state 11
    NAME   shift, and go to state 12
    METH   shift, and go to state 13
    IF     shift, and go to state 14
    LOOP   shift, and go to state 15
    '}'    shift, and go to state 152

    statement         go to state 42
    initialization    go to state 20
    controlStructure  go to state 43
    method            go to state 44
    typeContainer     go to state 23
    type              go to state 24


State 150

   48 len: LEN . '(' NAME ')'

    '('  shift, and go to state 153


State 151

   45 controlStructure: LOOP FOR '(' INT NAME ',' NAME comparator len . ',' DIGIT ')' '{' content '}'

    ','  shift, and go to state 154


State 152

   49 method: METH NAME '(' param ')' ':' typeContainer '{' content '}' .

    $default  reduce using rule 49 (method)


State 153

   48 len: LEN '(' . NAME ')'

    NAME  shift, and go to state 155


State 154

   45 controlStructure: LOOP FOR '(' INT NAME ',' NAME comparator len ',' . DIGIT ')' '{' content '}'

    DIGIT  shift, and go to state 156


State 155

   48 len: LEN '(' NAME . ')'

    ')'  shift, and go to state 157


State 156

   45 controlStructure: LOOP FOR '(' INT NAME ',' NAME comparator len ',' DIGIT . ')' '{' content '}'

    ')'  shift, and go to state 158


State 157

   48 len: LEN '(' NAME ')' .

    $default  reduce using rule 48 (len)


State 158

   45 controlStructure: LOOP FOR '(' INT NAME ',' NAME comparator len ',' DIGIT ')' . '{' content '}'

    '{'  shift, and go to state 159


State 159

   45 controlStructure: LOOP FOR '(' INT NAME ',' NAME comparator len ',' DIGIT ')' '{' . content '}'

    RET    shift, and go to state 2
    END    shift, and go to state 3
    NEXT   shift, and go to state 4
    TERM   shift, and go to state 5
    INT    shift, and go to state 6
    FLOAT  shift, and go to state 7
    BOOL   shift, and go to state 8
    CHAR   shift, and go to state 9
    ARR    shift, and go to state 10
    STR    shift, and go to state 11
    NAME   shift, and go to state 12
    METH   shift, and go to state 13
    IF     shift, and go to state 14
    LOOP   shift, and go to state 15

    content           go to state 160
    statement         go to state 19
    initialization    go to state 20
    controlStructure  go to state 21
    method            go to state 22
    typeContainer     go to state 23
    type              go to state 24


State 160

    6 content: content . statement
    8        | content . controlStructure
   10        | content . method
   45 controlStructure: LOOP FOR '(' INT NAME ',' NAME comparator len ',' DIGIT ')' '{' content . '}'

    RET    shift, and go to state 2
    END    shift, and go to state 3
    NEXT   shift, and go to state 4
    TERM   shift, and go to state 5
    INT    shift, and go to state 6
    FLOAT  shift, and go to state 7
    BOOL   shift, and go to state 8
    CHAR   shift, and go to state 9
    ARR    shift, and go to state 10
    STR    shift, and go to state 11
    NAME   shift, and go to state 12
    METH   shift, and go to state 13
    IF     shift, and go to state 14
    LOOP   shift, and go to state 15
    '}'    shift, and go to state 161

    statement         go to state 42
    initialization    go to state 20
    controlStructure  go to state 43
    method            go to state 44
    typeContainer     go to state 23
    type              go to state 24


State 161

   45 controlStructure: LOOP FOR '(' INT NAME ',' NAME comparator len ',' DIGIT ')' '{' content '}' .

    $default  reduce using rule 45 (controlStructure)
